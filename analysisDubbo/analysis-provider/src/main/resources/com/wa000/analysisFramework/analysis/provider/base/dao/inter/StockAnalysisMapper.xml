<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wa000.analysisFramework.analysis.provider.base.dao.StockAnalysisMapper">
  <resultMap id="BaseResultMap" type="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysis">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <id column="characterMark" jdbcType="VARCHAR" property="charactermark" />
    <result column="successRate" jdbcType="DOUBLE" property="successrate" />
    <result column="analysisCount" jdbcType="INTEGER" property="analysiscount" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysis">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="characterLog" jdbcType="LONGVARCHAR" property="characterlog" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, characterMark, successRate, analysisCount
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    characterLog
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysisExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from stock_analysis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysisExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock_analysis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysisKey" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from stock_analysis
    where id = #{id,jdbcType=VARCHAR}
      and characterMark = #{charactermark,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysisKey">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from stock_analysis
    where id = #{id,jdbcType=VARCHAR}
      and characterMark = #{charactermark,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysisExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from stock_analysis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysis">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into stock_analysis (id, characterMark, successRate, 
      analysisCount, characterLog)
    values (#{id,jdbcType=VARCHAR}, #{charactermark,jdbcType=VARCHAR}, #{successrate,jdbcType=DOUBLE}, 
      #{analysiscount,jdbcType=INTEGER}, #{characterlog,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysis">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into stock_analysis
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="charactermark != null">
        characterMark,
      </if>
      <if test="successrate != null">
        successRate,
      </if>
      <if test="analysiscount != null">
        analysisCount,
      </if>
      <if test="characterlog != null">
        characterLog,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="charactermark != null">
        #{charactermark,jdbcType=VARCHAR},
      </if>
      <if test="successrate != null">
        #{successrate,jdbcType=DOUBLE},
      </if>
      <if test="analysiscount != null">
        #{analysiscount,jdbcType=INTEGER},
      </if>
      <if test="characterlog != null">
        #{characterlog,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysisExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from stock_analysis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update stock_analysis
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.charactermark != null">
        characterMark = #{record.charactermark,jdbcType=VARCHAR},
      </if>
      <if test="record.successrate != null">
        successRate = #{record.successrate,jdbcType=DOUBLE},
      </if>
      <if test="record.analysiscount != null">
        analysisCount = #{record.analysiscount,jdbcType=INTEGER},
      </if>
      <if test="record.characterlog != null">
        characterLog = #{record.characterlog,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update stock_analysis
    set id = #{record.id,jdbcType=VARCHAR},
      characterMark = #{record.charactermark,jdbcType=VARCHAR},
      successRate = #{record.successrate,jdbcType=DOUBLE},
      analysisCount = #{record.analysiscount,jdbcType=INTEGER},
      characterLog = #{record.characterlog,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update stock_analysis
    set id = #{record.id,jdbcType=VARCHAR},
      characterMark = #{record.charactermark,jdbcType=VARCHAR},
      successRate = #{record.successrate,jdbcType=DOUBLE},
      analysisCount = #{record.analysiscount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysis">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update stock_analysis
    <set>
      <if test="successrate != null">
        successRate = #{successrate,jdbcType=DOUBLE},
      </if>
      <if test="analysiscount != null">
        analysisCount = #{analysiscount,jdbcType=INTEGER},
      </if>
      <if test="characterlog != null">
        characterLog = #{characterlog,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
      and characterMark = #{charactermark,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysis">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update stock_analysis
    set successRate = #{successrate,jdbcType=DOUBLE},
      analysisCount = #{analysiscount,jdbcType=INTEGER},
      characterLog = #{characterlog,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
      and characterMark = #{charactermark,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockAnalysis">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update stock_analysis
    set successRate = #{successrate,jdbcType=DOUBLE},
      analysisCount = #{analysiscount,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
      and characterMark = #{charactermark,jdbcType=VARCHAR}
  </update>
</mapper>
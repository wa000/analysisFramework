<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wa000.analysisFramework.analysis.provider.base.dao.StockPriceHisBackMapper" >
  <resultMap id="BaseResultMap" type="com.wa000.analysisFramework.analysis.provider.base.entity.StockPriceHisBack" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <id column="logDate" property="logdate" jdbcType="TIMESTAMP" />
    <result column="beginPrice" property="beginprice" jdbcType="REAL" />
    <result column="endPrice" property="endprice" jdbcType="REAL" />
    <result column="topPrice" property="topprice" jdbcType="REAL" />
    <result column="footPrice" property="footprice" jdbcType="REAL" />
    <result column="rate" property="rate" jdbcType="REAL" />
    <result column="count" property="count" jdbcType="BIGINT" />
    <result column="cjPriceCount" property="cjpricecount" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, logDate, beginPrice, endPrice, topPrice, footPrice, rate, count, cjPriceCount, 
    type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockPriceHisBackExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock_price_his_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockPriceHisBackKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from stock_price_his_back
    where id = #{id,jdbcType=VARCHAR}
      and logDate = #{logdate,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockPriceHisBackKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from stock_price_his_back
    where id = #{id,jdbcType=VARCHAR}
      and logDate = #{logdate,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByExample" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockPriceHisBackExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from stock_price_his_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockPriceHisBack" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into stock_price_his_back (id, logDate, beginPrice, 
      endPrice, topPrice, footPrice, 
      rate, count, cjPriceCount, 
      type)
    values (#{id,jdbcType=VARCHAR}, #{logdate,jdbcType=TIMESTAMP}, #{beginprice,jdbcType=REAL}, 
      #{endprice,jdbcType=REAL}, #{topprice,jdbcType=REAL}, #{footprice,jdbcType=REAL}, 
      #{rate,jdbcType=REAL}, #{count,jdbcType=BIGINT}, #{cjpricecount,jdbcType=BIGINT}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockPriceHisBack" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into stock_price_his_back
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="logdate != null" >
        logDate,
      </if>
      <if test="beginprice != null" >
        beginPrice,
      </if>
      <if test="endprice != null" >
        endPrice,
      </if>
      <if test="topprice != null" >
        topPrice,
      </if>
      <if test="footprice != null" >
        footPrice,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="cjpricecount != null" >
        cjPriceCount,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="logdate != null" >
        #{logdate,jdbcType=TIMESTAMP},
      </if>
      <if test="beginprice != null" >
        #{beginprice,jdbcType=REAL},
      </if>
      <if test="endprice != null" >
        #{endprice,jdbcType=REAL},
      </if>
      <if test="topprice != null" >
        #{topprice,jdbcType=REAL},
      </if>
      <if test="footprice != null" >
        #{footprice,jdbcType=REAL},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=REAL},
      </if>
      <if test="count != null" >
        #{count,jdbcType=BIGINT},
      </if>
      <if test="cjpricecount != null" >
        #{cjpricecount,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockPriceHisBackExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from stock_price_his_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update stock_price_his_back
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.logdate != null" >
        logDate = #{record.logdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.beginprice != null" >
        beginPrice = #{record.beginprice,jdbcType=REAL},
      </if>
      <if test="record.endprice != null" >
        endPrice = #{record.endprice,jdbcType=REAL},
      </if>
      <if test="record.topprice != null" >
        topPrice = #{record.topprice,jdbcType=REAL},
      </if>
      <if test="record.footprice != null" >
        footPrice = #{record.footprice,jdbcType=REAL},
      </if>
      <if test="record.rate != null" >
        rate = #{record.rate,jdbcType=REAL},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=BIGINT},
      </if>
      <if test="record.cjpricecount != null" >
        cjPriceCount = #{record.cjpricecount,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update stock_price_his_back
    set id = #{record.id,jdbcType=VARCHAR},
      logDate = #{record.logdate,jdbcType=TIMESTAMP},
      beginPrice = #{record.beginprice,jdbcType=REAL},
      endPrice = #{record.endprice,jdbcType=REAL},
      topPrice = #{record.topprice,jdbcType=REAL},
      footPrice = #{record.footprice,jdbcType=REAL},
      rate = #{record.rate,jdbcType=REAL},
      count = #{record.count,jdbcType=BIGINT},
      cjPriceCount = #{record.cjpricecount,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockPriceHisBack" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update stock_price_his_back
    <set >
      <if test="beginprice != null" >
        beginPrice = #{beginprice,jdbcType=REAL},
      </if>
      <if test="endprice != null" >
        endPrice = #{endprice,jdbcType=REAL},
      </if>
      <if test="topprice != null" >
        topPrice = #{topprice,jdbcType=REAL},
      </if>
      <if test="footprice != null" >
        footPrice = #{footprice,jdbcType=REAL},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=REAL},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=BIGINT},
      </if>
      <if test="cjpricecount != null" >
        cjPriceCount = #{cjpricecount,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
      and logDate = #{logdate,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wa000.analysisFramework.analysis.provider.base.entity.StockPriceHisBack" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update stock_price_his_back
    set beginPrice = #{beginprice,jdbcType=REAL},
      endPrice = #{endprice,jdbcType=REAL},
      topPrice = #{topprice,jdbcType=REAL},
      footPrice = #{footprice,jdbcType=REAL},
      rate = #{rate,jdbcType=REAL},
      count = #{count,jdbcType=BIGINT},
      cjPriceCount = #{cjpricecount,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
      and logDate = #{logdate,jdbcType=TIMESTAMP}
  </update>
</mapper>
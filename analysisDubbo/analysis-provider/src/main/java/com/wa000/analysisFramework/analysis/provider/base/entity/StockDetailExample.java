package com.wa000.analysisFramework.analysis.provider.base.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class StockDetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    public StockDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCjtimeIsNull() {
            addCriterion("cjTime is null");
            return (Criteria) this;
        }

        public Criteria andCjtimeIsNotNull() {
            addCriterion("cjTime is not null");
            return (Criteria) this;
        }

        public Criteria andCjtimeEqualTo(Date value) {
            addCriterion("cjTime =", value, "cjtime");
            return (Criteria) this;
        }

        public Criteria andCjtimeNotEqualTo(Date value) {
            addCriterion("cjTime <>", value, "cjtime");
            return (Criteria) this;
        }

        public Criteria andCjtimeGreaterThan(Date value) {
            addCriterion("cjTime >", value, "cjtime");
            return (Criteria) this;
        }

        public Criteria andCjtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("cjTime >=", value, "cjtime");
            return (Criteria) this;
        }

        public Criteria andCjtimeLessThan(Date value) {
            addCriterion("cjTime <", value, "cjtime");
            return (Criteria) this;
        }

        public Criteria andCjtimeLessThanOrEqualTo(Date value) {
            addCriterion("cjTime <=", value, "cjtime");
            return (Criteria) this;
        }

        public Criteria andCjtimeIn(List<Date> values) {
            addCriterion("cjTime in", values, "cjtime");
            return (Criteria) this;
        }

        public Criteria andCjtimeNotIn(List<Date> values) {
            addCriterion("cjTime not in", values, "cjtime");
            return (Criteria) this;
        }

        public Criteria andCjtimeBetween(Date value1, Date value2) {
            addCriterion("cjTime between", value1, value2, "cjtime");
            return (Criteria) this;
        }

        public Criteria andCjtimeNotBetween(Date value1, Date value2) {
            addCriterion("cjTime not between", value1, value2, "cjtime");
            return (Criteria) this;
        }

        public Criteria andCjpriceIsNull() {
            addCriterion("cjPrice is null");
            return (Criteria) this;
        }

        public Criteria andCjpriceIsNotNull() {
            addCriterion("cjPrice is not null");
            return (Criteria) this;
        }

        public Criteria andCjpriceEqualTo(Float value) {
            addCriterion("cjPrice =", value, "cjprice");
            return (Criteria) this;
        }

        public Criteria andCjpriceNotEqualTo(Float value) {
            addCriterion("cjPrice <>", value, "cjprice");
            return (Criteria) this;
        }

        public Criteria andCjpriceGreaterThan(Float value) {
            addCriterion("cjPrice >", value, "cjprice");
            return (Criteria) this;
        }

        public Criteria andCjpriceGreaterThanOrEqualTo(Float value) {
            addCriterion("cjPrice >=", value, "cjprice");
            return (Criteria) this;
        }

        public Criteria andCjpriceLessThan(Float value) {
            addCriterion("cjPrice <", value, "cjprice");
            return (Criteria) this;
        }

        public Criteria andCjpriceLessThanOrEqualTo(Float value) {
            addCriterion("cjPrice <=", value, "cjprice");
            return (Criteria) this;
        }

        public Criteria andCjpriceIn(List<Float> values) {
            addCriterion("cjPrice in", values, "cjprice");
            return (Criteria) this;
        }

        public Criteria andCjpriceNotIn(List<Float> values) {
            addCriterion("cjPrice not in", values, "cjprice");
            return (Criteria) this;
        }

        public Criteria andCjpriceBetween(Float value1, Float value2) {
            addCriterion("cjPrice between", value1, value2, "cjprice");
            return (Criteria) this;
        }

        public Criteria andCjpriceNotBetween(Float value1, Float value2) {
            addCriterion("cjPrice not between", value1, value2, "cjprice");
            return (Criteria) this;
        }

        public Criteria andChangepriceIsNull() {
            addCriterion("changePrice is null");
            return (Criteria) this;
        }

        public Criteria andChangepriceIsNotNull() {
            addCriterion("changePrice is not null");
            return (Criteria) this;
        }

        public Criteria andChangepriceEqualTo(Float value) {
            addCriterion("changePrice =", value, "changeprice");
            return (Criteria) this;
        }

        public Criteria andChangepriceNotEqualTo(Float value) {
            addCriterion("changePrice <>", value, "changeprice");
            return (Criteria) this;
        }

        public Criteria andChangepriceGreaterThan(Float value) {
            addCriterion("changePrice >", value, "changeprice");
            return (Criteria) this;
        }

        public Criteria andChangepriceGreaterThanOrEqualTo(Float value) {
            addCriterion("changePrice >=", value, "changeprice");
            return (Criteria) this;
        }

        public Criteria andChangepriceLessThan(Float value) {
            addCriterion("changePrice <", value, "changeprice");
            return (Criteria) this;
        }

        public Criteria andChangepriceLessThanOrEqualTo(Float value) {
            addCriterion("changePrice <=", value, "changeprice");
            return (Criteria) this;
        }

        public Criteria andChangepriceIn(List<Float> values) {
            addCriterion("changePrice in", values, "changeprice");
            return (Criteria) this;
        }

        public Criteria andChangepriceNotIn(List<Float> values) {
            addCriterion("changePrice not in", values, "changeprice");
            return (Criteria) this;
        }

        public Criteria andChangepriceBetween(Float value1, Float value2) {
            addCriterion("changePrice between", value1, value2, "changeprice");
            return (Criteria) this;
        }

        public Criteria andChangepriceNotBetween(Float value1, Float value2) {
            addCriterion("changePrice not between", value1, value2, "changeprice");
            return (Criteria) this;
        }

        public Criteria andCjcountIsNull() {
            addCriterion("cjCount is null");
            return (Criteria) this;
        }

        public Criteria andCjcountIsNotNull() {
            addCriterion("cjCount is not null");
            return (Criteria) this;
        }

        public Criteria andCjcountEqualTo(Long value) {
            addCriterion("cjCount =", value, "cjcount");
            return (Criteria) this;
        }

        public Criteria andCjcountNotEqualTo(Long value) {
            addCriterion("cjCount <>", value, "cjcount");
            return (Criteria) this;
        }

        public Criteria andCjcountGreaterThan(Long value) {
            addCriterion("cjCount >", value, "cjcount");
            return (Criteria) this;
        }

        public Criteria andCjcountGreaterThanOrEqualTo(Long value) {
            addCriterion("cjCount >=", value, "cjcount");
            return (Criteria) this;
        }

        public Criteria andCjcountLessThan(Long value) {
            addCriterion("cjCount <", value, "cjcount");
            return (Criteria) this;
        }

        public Criteria andCjcountLessThanOrEqualTo(Long value) {
            addCriterion("cjCount <=", value, "cjcount");
            return (Criteria) this;
        }

        public Criteria andCjcountIn(List<Long> values) {
            addCriterion("cjCount in", values, "cjcount");
            return (Criteria) this;
        }

        public Criteria andCjcountNotIn(List<Long> values) {
            addCriterion("cjCount not in", values, "cjcount");
            return (Criteria) this;
        }

        public Criteria andCjcountBetween(Long value1, Long value2) {
            addCriterion("cjCount between", value1, value2, "cjcount");
            return (Criteria) this;
        }

        public Criteria andCjcountNotBetween(Long value1, Long value2) {
            addCriterion("cjCount not between", value1, value2, "cjcount");
            return (Criteria) this;
        }

        public Criteria andCjpriceallIsNull() {
            addCriterion("cjPriceAll is null");
            return (Criteria) this;
        }

        public Criteria andCjpriceallIsNotNull() {
            addCriterion("cjPriceAll is not null");
            return (Criteria) this;
        }

        public Criteria andCjpriceallEqualTo(Long value) {
            addCriterion("cjPriceAll =", value, "cjpriceall");
            return (Criteria) this;
        }

        public Criteria andCjpriceallNotEqualTo(Long value) {
            addCriterion("cjPriceAll <>", value, "cjpriceall");
            return (Criteria) this;
        }

        public Criteria andCjpriceallGreaterThan(Long value) {
            addCriterion("cjPriceAll >", value, "cjpriceall");
            return (Criteria) this;
        }

        public Criteria andCjpriceallGreaterThanOrEqualTo(Long value) {
            addCriterion("cjPriceAll >=", value, "cjpriceall");
            return (Criteria) this;
        }

        public Criteria andCjpriceallLessThan(Long value) {
            addCriterion("cjPriceAll <", value, "cjpriceall");
            return (Criteria) this;
        }

        public Criteria andCjpriceallLessThanOrEqualTo(Long value) {
            addCriterion("cjPriceAll <=", value, "cjpriceall");
            return (Criteria) this;
        }

        public Criteria andCjpriceallIn(List<Long> values) {
            addCriterion("cjPriceAll in", values, "cjpriceall");
            return (Criteria) this;
        }

        public Criteria andCjpriceallNotIn(List<Long> values) {
            addCriterion("cjPriceAll not in", values, "cjpriceall");
            return (Criteria) this;
        }

        public Criteria andCjpriceallBetween(Long value1, Long value2) {
            addCriterion("cjPriceAll between", value1, value2, "cjpriceall");
            return (Criteria) this;
        }

        public Criteria andCjpriceallNotBetween(Long value1, Long value2) {
            addCriterion("cjPriceAll not between", value1, value2, "cjpriceall");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("type like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("type not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock_detail
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock_detail
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
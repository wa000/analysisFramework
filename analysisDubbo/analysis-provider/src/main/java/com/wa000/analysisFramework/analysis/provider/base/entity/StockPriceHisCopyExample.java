package com.wa000.analysisFramework.analysis.provider.base.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class StockPriceHisCopyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    public StockPriceHisCopyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andLogdateIsNull() {
            addCriterion("logDate is null");
            return (Criteria) this;
        }

        public Criteria andLogdateIsNotNull() {
            addCriterion("logDate is not null");
            return (Criteria) this;
        }

        public Criteria andLogdateEqualTo(Date value) {
            addCriterion("logDate =", value, "logdate");
            return (Criteria) this;
        }

        public Criteria andLogdateNotEqualTo(Date value) {
            addCriterion("logDate <>", value, "logdate");
            return (Criteria) this;
        }

        public Criteria andLogdateGreaterThan(Date value) {
            addCriterion("logDate >", value, "logdate");
            return (Criteria) this;
        }

        public Criteria andLogdateGreaterThanOrEqualTo(Date value) {
            addCriterion("logDate >=", value, "logdate");
            return (Criteria) this;
        }

        public Criteria andLogdateLessThan(Date value) {
            addCriterion("logDate <", value, "logdate");
            return (Criteria) this;
        }

        public Criteria andLogdateLessThanOrEqualTo(Date value) {
            addCriterion("logDate <=", value, "logdate");
            return (Criteria) this;
        }

        public Criteria andLogdateIn(List<Date> values) {
            addCriterion("logDate in", values, "logdate");
            return (Criteria) this;
        }

        public Criteria andLogdateNotIn(List<Date> values) {
            addCriterion("logDate not in", values, "logdate");
            return (Criteria) this;
        }

        public Criteria andLogdateBetween(Date value1, Date value2) {
            addCriterion("logDate between", value1, value2, "logdate");
            return (Criteria) this;
        }

        public Criteria andLogdateNotBetween(Date value1, Date value2) {
            addCriterion("logDate not between", value1, value2, "logdate");
            return (Criteria) this;
        }

        public Criteria andBeginpriceIsNull() {
            addCriterion("beginPrice is null");
            return (Criteria) this;
        }

        public Criteria andBeginpriceIsNotNull() {
            addCriterion("beginPrice is not null");
            return (Criteria) this;
        }

        public Criteria andBeginpriceEqualTo(Float value) {
            addCriterion("beginPrice =", value, "beginprice");
            return (Criteria) this;
        }

        public Criteria andBeginpriceNotEqualTo(Float value) {
            addCriterion("beginPrice <>", value, "beginprice");
            return (Criteria) this;
        }

        public Criteria andBeginpriceGreaterThan(Float value) {
            addCriterion("beginPrice >", value, "beginprice");
            return (Criteria) this;
        }

        public Criteria andBeginpriceGreaterThanOrEqualTo(Float value) {
            addCriterion("beginPrice >=", value, "beginprice");
            return (Criteria) this;
        }

        public Criteria andBeginpriceLessThan(Float value) {
            addCriterion("beginPrice <", value, "beginprice");
            return (Criteria) this;
        }

        public Criteria andBeginpriceLessThanOrEqualTo(Float value) {
            addCriterion("beginPrice <=", value, "beginprice");
            return (Criteria) this;
        }

        public Criteria andBeginpriceIn(List<Float> values) {
            addCriterion("beginPrice in", values, "beginprice");
            return (Criteria) this;
        }

        public Criteria andBeginpriceNotIn(List<Float> values) {
            addCriterion("beginPrice not in", values, "beginprice");
            return (Criteria) this;
        }

        public Criteria andBeginpriceBetween(Float value1, Float value2) {
            addCriterion("beginPrice between", value1, value2, "beginprice");
            return (Criteria) this;
        }

        public Criteria andBeginpriceNotBetween(Float value1, Float value2) {
            addCriterion("beginPrice not between", value1, value2, "beginprice");
            return (Criteria) this;
        }

        public Criteria andEndpriceIsNull() {
            addCriterion("endPrice is null");
            return (Criteria) this;
        }

        public Criteria andEndpriceIsNotNull() {
            addCriterion("endPrice is not null");
            return (Criteria) this;
        }

        public Criteria andEndpriceEqualTo(Float value) {
            addCriterion("endPrice =", value, "endprice");
            return (Criteria) this;
        }

        public Criteria andEndpriceNotEqualTo(Float value) {
            addCriterion("endPrice <>", value, "endprice");
            return (Criteria) this;
        }

        public Criteria andEndpriceGreaterThan(Float value) {
            addCriterion("endPrice >", value, "endprice");
            return (Criteria) this;
        }

        public Criteria andEndpriceGreaterThanOrEqualTo(Float value) {
            addCriterion("endPrice >=", value, "endprice");
            return (Criteria) this;
        }

        public Criteria andEndpriceLessThan(Float value) {
            addCriterion("endPrice <", value, "endprice");
            return (Criteria) this;
        }

        public Criteria andEndpriceLessThanOrEqualTo(Float value) {
            addCriterion("endPrice <=", value, "endprice");
            return (Criteria) this;
        }

        public Criteria andEndpriceIn(List<Float> values) {
            addCriterion("endPrice in", values, "endprice");
            return (Criteria) this;
        }

        public Criteria andEndpriceNotIn(List<Float> values) {
            addCriterion("endPrice not in", values, "endprice");
            return (Criteria) this;
        }

        public Criteria andEndpriceBetween(Float value1, Float value2) {
            addCriterion("endPrice between", value1, value2, "endprice");
            return (Criteria) this;
        }

        public Criteria andEndpriceNotBetween(Float value1, Float value2) {
            addCriterion("endPrice not between", value1, value2, "endprice");
            return (Criteria) this;
        }

        public Criteria andToppriceIsNull() {
            addCriterion("topPrice is null");
            return (Criteria) this;
        }

        public Criteria andToppriceIsNotNull() {
            addCriterion("topPrice is not null");
            return (Criteria) this;
        }

        public Criteria andToppriceEqualTo(Float value) {
            addCriterion("topPrice =", value, "topprice");
            return (Criteria) this;
        }

        public Criteria andToppriceNotEqualTo(Float value) {
            addCriterion("topPrice <>", value, "topprice");
            return (Criteria) this;
        }

        public Criteria andToppriceGreaterThan(Float value) {
            addCriterion("topPrice >", value, "topprice");
            return (Criteria) this;
        }

        public Criteria andToppriceGreaterThanOrEqualTo(Float value) {
            addCriterion("topPrice >=", value, "topprice");
            return (Criteria) this;
        }

        public Criteria andToppriceLessThan(Float value) {
            addCriterion("topPrice <", value, "topprice");
            return (Criteria) this;
        }

        public Criteria andToppriceLessThanOrEqualTo(Float value) {
            addCriterion("topPrice <=", value, "topprice");
            return (Criteria) this;
        }

        public Criteria andToppriceIn(List<Float> values) {
            addCriterion("topPrice in", values, "topprice");
            return (Criteria) this;
        }

        public Criteria andToppriceNotIn(List<Float> values) {
            addCriterion("topPrice not in", values, "topprice");
            return (Criteria) this;
        }

        public Criteria andToppriceBetween(Float value1, Float value2) {
            addCriterion("topPrice between", value1, value2, "topprice");
            return (Criteria) this;
        }

        public Criteria andToppriceNotBetween(Float value1, Float value2) {
            addCriterion("topPrice not between", value1, value2, "topprice");
            return (Criteria) this;
        }

        public Criteria andFootpriceIsNull() {
            addCriterion("footPrice is null");
            return (Criteria) this;
        }

        public Criteria andFootpriceIsNotNull() {
            addCriterion("footPrice is not null");
            return (Criteria) this;
        }

        public Criteria andFootpriceEqualTo(Float value) {
            addCriterion("footPrice =", value, "footprice");
            return (Criteria) this;
        }

        public Criteria andFootpriceNotEqualTo(Float value) {
            addCriterion("footPrice <>", value, "footprice");
            return (Criteria) this;
        }

        public Criteria andFootpriceGreaterThan(Float value) {
            addCriterion("footPrice >", value, "footprice");
            return (Criteria) this;
        }

        public Criteria andFootpriceGreaterThanOrEqualTo(Float value) {
            addCriterion("footPrice >=", value, "footprice");
            return (Criteria) this;
        }

        public Criteria andFootpriceLessThan(Float value) {
            addCriterion("footPrice <", value, "footprice");
            return (Criteria) this;
        }

        public Criteria andFootpriceLessThanOrEqualTo(Float value) {
            addCriterion("footPrice <=", value, "footprice");
            return (Criteria) this;
        }

        public Criteria andFootpriceIn(List<Float> values) {
            addCriterion("footPrice in", values, "footprice");
            return (Criteria) this;
        }

        public Criteria andFootpriceNotIn(List<Float> values) {
            addCriterion("footPrice not in", values, "footprice");
            return (Criteria) this;
        }

        public Criteria andFootpriceBetween(Float value1, Float value2) {
            addCriterion("footPrice between", value1, value2, "footprice");
            return (Criteria) this;
        }

        public Criteria andFootpriceNotBetween(Float value1, Float value2) {
            addCriterion("footPrice not between", value1, value2, "footprice");
            return (Criteria) this;
        }

        public Criteria andRateIsNull() {
            addCriterion("rate is null");
            return (Criteria) this;
        }

        public Criteria andRateIsNotNull() {
            addCriterion("rate is not null");
            return (Criteria) this;
        }

        public Criteria andRateEqualTo(Float value) {
            addCriterion("rate =", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotEqualTo(Float value) {
            addCriterion("rate <>", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateGreaterThan(Float value) {
            addCriterion("rate >", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateGreaterThanOrEqualTo(Float value) {
            addCriterion("rate >=", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateLessThan(Float value) {
            addCriterion("rate <", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateLessThanOrEqualTo(Float value) {
            addCriterion("rate <=", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateIn(List<Float> values) {
            addCriterion("rate in", values, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotIn(List<Float> values) {
            addCriterion("rate not in", values, "rate");
            return (Criteria) this;
        }

        public Criteria andRateBetween(Float value1, Float value2) {
            addCriterion("rate between", value1, value2, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotBetween(Float value1, Float value2) {
            addCriterion("rate not between", value1, value2, "rate");
            return (Criteria) this;
        }

        public Criteria andCountIsNull() {
            addCriterion("count is null");
            return (Criteria) this;
        }

        public Criteria andCountIsNotNull() {
            addCriterion("count is not null");
            return (Criteria) this;
        }

        public Criteria andCountEqualTo(Long value) {
            addCriterion("count =", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountNotEqualTo(Long value) {
            addCriterion("count <>", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountGreaterThan(Long value) {
            addCriterion("count >", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountGreaterThanOrEqualTo(Long value) {
            addCriterion("count >=", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountLessThan(Long value) {
            addCriterion("count <", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountLessThanOrEqualTo(Long value) {
            addCriterion("count <=", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountIn(List<Long> values) {
            addCriterion("count in", values, "count");
            return (Criteria) this;
        }

        public Criteria andCountNotIn(List<Long> values) {
            addCriterion("count not in", values, "count");
            return (Criteria) this;
        }

        public Criteria andCountBetween(Long value1, Long value2) {
            addCriterion("count between", value1, value2, "count");
            return (Criteria) this;
        }

        public Criteria andCountNotBetween(Long value1, Long value2) {
            addCriterion("count not between", value1, value2, "count");
            return (Criteria) this;
        }

        public Criteria andCjpricecountIsNull() {
            addCriterion("cjPriceCount is null");
            return (Criteria) this;
        }

        public Criteria andCjpricecountIsNotNull() {
            addCriterion("cjPriceCount is not null");
            return (Criteria) this;
        }

        public Criteria andCjpricecountEqualTo(Long value) {
            addCriterion("cjPriceCount =", value, "cjpricecount");
            return (Criteria) this;
        }

        public Criteria andCjpricecountNotEqualTo(Long value) {
            addCriterion("cjPriceCount <>", value, "cjpricecount");
            return (Criteria) this;
        }

        public Criteria andCjpricecountGreaterThan(Long value) {
            addCriterion("cjPriceCount >", value, "cjpricecount");
            return (Criteria) this;
        }

        public Criteria andCjpricecountGreaterThanOrEqualTo(Long value) {
            addCriterion("cjPriceCount >=", value, "cjpricecount");
            return (Criteria) this;
        }

        public Criteria andCjpricecountLessThan(Long value) {
            addCriterion("cjPriceCount <", value, "cjpricecount");
            return (Criteria) this;
        }

        public Criteria andCjpricecountLessThanOrEqualTo(Long value) {
            addCriterion("cjPriceCount <=", value, "cjpricecount");
            return (Criteria) this;
        }

        public Criteria andCjpricecountIn(List<Long> values) {
            addCriterion("cjPriceCount in", values, "cjpricecount");
            return (Criteria) this;
        }

        public Criteria andCjpricecountNotIn(List<Long> values) {
            addCriterion("cjPriceCount not in", values, "cjpricecount");
            return (Criteria) this;
        }

        public Criteria andCjpricecountBetween(Long value1, Long value2) {
            addCriterion("cjPriceCount between", value1, value2, "cjpricecount");
            return (Criteria) this;
        }

        public Criteria andCjpricecountNotBetween(Long value1, Long value2) {
            addCriterion("cjPriceCount not between", value1, value2, "cjpricecount");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock_price_his_copy
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}